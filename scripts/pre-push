#! /usr/bin/env python
# Original implementation by: nivbend (GitHub)

from __future__ import print_function
from subprocess import check_output, CalledProcessError
from os.path import isfile
from os import listdir

import logging

logging.basicConfig(
    format="%(asctime)-15s %(levelname)s: %(message)s", level=logging.INFO
)
log = logging.getLogger("pre-push")

(SUCCESS, TYPE_CHECK_ERROR, UNIT_TEST_ERROR) = range(3)


def run():
    """
    Run the unit tests for all source code modules.
    """
    main_type_check_cmd = ["mypy", "--ignore-missing-imports", "main.py"]
    log.info("Running main module source code type checks")
    try:
        type_check = check_output(main_type_check_cmd)
    except CalledProcessError:
        log.error(
            "main source code type checks failed: {}".format(
                " ".join(main_ype_check_cmd)
            )
        )
        return TYPE_CHECK_ERROR

    src_modules = [
        x.replace(".py", "")
        for x in listdir("src")
        if x.endswith(".py") and x != "__init__.py"
    ]
    for mod in src_modules:
        src_type_check_cmd = [
            "mypy",
            "--ignore-missing-imports",
            "src/{}.py".format(mod),
        ]
        log.info("Running {} source code type checks".format(mod))
        try:
            type_check = check_output(src_type_check_cmd)
        except CalledProcessError:
            log.error(
                "{} source code type checks failed: {}".format(
                    mod, " ".join(src_type_check_cmd)
                )
            )
            return TYPE_CHECK_ERROR

    test_modules = [
        x.replace(".py", "")
        for x in listdir("test")
        if x.endswith(".py") and x != "__init__.py"
    ]
    for mod in test_modules:
        test_type_check_cmd = [
            "mypy",
            "--ignore-missing-imports",
            "test/{}.py".format(mod),
        ]
        log.info("Running {} unit test type checks".format(mod))
        try:
            type_check = check_output(test_type_check_cmd)
        except CalledProcessError:
            log.error(
                "{} unit test type checks failed: {}".format(
                    mod, " ".join(test_type_check_cmd)
                )
            )
            return TYPE_CHECK_ERROR

    for mod in test_modules:
        test_cmd = [
            "python3",
            "-m",
            "unittest",
            "--verbose",
            "test.{}".format(mod),
        ]
        log.info("Running {} unit tests".format(mod))
        try:
            test_status = check_output(test_cmd)
        except CalledProcessError:
            log.error("{} unit tests failed: {}".format(mod, test_cmd))
            return UNIT_TEST_ERROR

    return SUCCESS


if __name__ == "__main__":
    exit(run())
